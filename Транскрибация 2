import requests
import subprocess
import torch
from transformers import Wav2Vec2ForCTC, Wav2Vec2Processor
import soundfile as sf

# 1. Скачиваем видео с Яндекс.Диска
def download_video(url, output_path="video.mp4"):
    response = requests.get(url)
    with open(output_path, "wb") as f:
        f.write(response.content)
    print("Видео скачано:", output_path)

# 2. Преобразуем видео в аудио с помощью ffmpeg
def convert_video_to_audio(video_path="video.mp4", audio_path="audio.wav"):
    command = f"ffmpeg -i {video_path} -ac 1 -ar 16000 {audio_path}"
    subprocess.run(command, shell=True)
    print("Аудио файл создан:", audio_path)

# 3. Транскрибируем аудио в текст с помощью Wav2Vec2
def transcribe_audio(audio_path="audio.wav"):
    # Загружаем модель и процессор для Wav2Vec2
    processor = Wav2Vec2Processor.from_pretrained("jonatasgrosman/wav2vec2-large-xlsr-53-russian")
    model = Wav2Vec2ForCTC.from_pretrained("jonatasgrosman/wav2vec2-large-xlsr-53-russian")

    # Загружаем аудиофайл
    audio_input, sample_rate = sf.read(audio_path)

    # Преобразуем аудио для модели
    input_values = processor(audio_input, sampling_rate=sample_rate, return_tensors="pt").input_values

    # Предсказываем текст
    with torch.no_grad():
        logits = model(input_values).logits
    predicted_ids = torch.argmax(logits, dim=-1)

    # Декодируем предсказание
    transcription = processor.decode(predicted_ids[0])
    return transcription

# Выполнение шагов
url = "Ваша_ссылка_на_скачивание_с_Яндекс.Диска"
download_video(url)
convert_video_to_audio()
transcription = transcribe_audio()
print("Транскрипция текста:", transcription)
